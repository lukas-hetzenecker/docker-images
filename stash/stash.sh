#!/usr/bin/env bash

. /opt/scripts/common.bash

set -e # Exit on errors

echo "-> Starting Stash ..."
echo "   - STASH_VERSION: $STASH_VERSION"
echo "   - STASH_HOME:    $STASH_HOME"

if [ -z "$STASH_HOME" ]; then
  export STASH_HOME=/opt/atlassian-home
fi

STASH_DIR=/opt/atlassian-stash-$STASH_VERSION
if [ -d $STASH_DIR ]; then
  echo "-> Stash $STASH_VERSION already found at $STASH_DIR. Skipping download."
else
  STASH_TARBALL_URL=http://www.atlassian.com/software/stash/downloads/binary/atlassian-stash-$STASH_VERSION.tar.gz
  echo "-> Downloading Stash $STASH_VERSION from $STASH_TARBALL_URL ..."
  wget --progress=dot:mega $STASH_TARBALL_URL -O /tmp/atlassian-stash.tar.gz
  echo "-> Extracting to $STASH_DIR ..."
  tar xzf /tmp/atlassian-stash.tar.gz -C /opt
  rm -f /tmp/atlassian-stash.tar.gz
  echo "-> Installation completed"
fi

if [ "$CONTEXT_PATH" == "ROOT" -o -z "$CONTEXT_PATH" ]; then
  CONTEXT_PATH=
else
  echo "Setting context path to: $CONTEXT_PATH"
  CONTEXT_PATH="/$CONTEXT_PATH"
fi
xmlstarlet ed --inplace --update '//Context/@path' -v "$CONTEXT_PATH" $STASH_DIR/conf/server.xml

mkdir -p $STASH_HOME

if [ -n "$DATABASE_URL" ]; then
  extract_database_url "$DATABASE_URL" DB $STASH_HOME/lib
  cat << EOF > $STASH_HOME/stash-config.properties
#>*******************************************************
#> Migrated to database at $DB_JDBC_URL
#> Generated by launch script on `date`
#>*******************************************************
jdbc.driver=$DB_JDBC_DRIVER
jdbc.url=$DB_JDBC_URL
jdbc.user=$DB_USER
jdbc.password=$DB_PASSWORD
EOF

fi

echo "-> Running Stash server ..."
$STASH_DIR/bin/start-stash.sh -fg

